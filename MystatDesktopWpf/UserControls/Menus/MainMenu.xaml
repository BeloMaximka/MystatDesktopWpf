<UserControl x:Class="MystatDesktopWpf.UserControls.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MystatDesktopWpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:MystatDesktopWpf.Domain" 
             xmlns:controls="clr-namespace:MystatDesktopWpf.UserControls" 
             xmlns:viewmodels="clr-namespace:MystatDesktopWpf.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignPaper}" 
             KeyDown="UserControl_KeyDown"
             Loaded="UserControl_Loaded">
    <materialDesign:DialogHost x:Name="NewsDialogHost" CloseOnClickAway="True" DialogTheme="Inherit">
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid x:Name="TopBar" Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=NagivationBar, Path=ActualWidth}"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ToggleButton Margin="0,5,0,5" Style="{DynamicResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Center" Visibility="Hidden"/>
                <StackPanel x:Name="headerBar" Orientation="Horizontal" HorizontalAlignment="Left"
                        Grid.Column="1" VerticalAlignment="Center" Margin="16,0,0,0"
                        d:DataContext="{d:DesignInstance Type=viewmodels:HeaderBarViewModel}">
                    <TextBlock Text="{Binding Name}" Margin="0,0,16,0" VerticalAlignment="Center"/>
                    <materialDesign:PackIcon Kind="Account" VerticalAlignment="Center"/>
                    <ContentPresenter Content="{Binding}">
                        <!-- Presentations -->
                        <ContentPresenter.Resources>
                            <DataTemplate x:Key="TextPresenter">
                                <TextBlock Text="{Binding Path=Group.Name}" Margin="4,0,16,0"/>
                            </DataTemplate>
                            <DataTemplate x:Key="ComboBoxPresenter">
                                <ComboBox x:Name="GroupsComboBox" IsSynchronizedWithCurrentItem="True" Margin="4,0,16,0"
                                          ItemsSource="{Binding GroupsList}" SelectedItem="{Binding Path=Group}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DataTemplate>
                        </ContentPresenter.Resources>

                        <!-- Triggers -->
                        <ContentPresenter.Style>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMultipleGroups}" Value="False">
                                        <Setter Property="ContentTemplate" Value="{StaticResource TextPresenter}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMultipleGroups}" Value="True">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ComboBoxPresenter}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Style>
                    </ContentPresenter>
                    <materialDesign:PackIcon Kind="Star" Foreground="#a67afa" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Points}" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <materialDesign:PackIcon Kind="Diamond" Foreground="#73a0ec" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Diamonds}" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <materialDesign:PackIcon Kind="AlphaICircle" Foreground="#ffc730" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Coins}" Margin="4,0,8,0" VerticalAlignment="Center"/>
                    <materialDesign:PackIcon Kind="Prize" Foreground="#f87087" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Badges}" Margin="4,0,8,0" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2">
                    <Grid x:Name="updateGrid" Visibility="Collapsed">
                        <Button Height="32" Width="32" x:Name="progressUpdateButton"
                            Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            Background="Transparent" Foreground="Transparent" BorderBrush="Transparent"
                            IsHitTestVisible="False"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True">
                        </Button>
                        <Button x:Name="updateButton" Style="{StaticResource PopupToolButton}" 
                            Foreground="{DynamicResource MaterialDesignBody}"
                            Content="{materialDesign:PackIcon Kind=TrayDownload, Size=24}" 
                            ToolTip="{DynamicResource m_UpdateApp}"
                            Visibility="{Binding ElementName=updateGrid, Path=Visibility}"
                            Click="UpdateButton_Click"/>
                    </Grid>

                    <Button x:Name="refreshButton" Margin="8,0,8,0" Click="RefreshButton_Click"
                        Content="{materialDesign:PackIcon Kind=Refresh, Size=24}"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        Style="{StaticResource MaterialDesignToolButton}"
                        materialDesign:ButtonProgressAssist.Value="-1"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True"/>
                    <controls:LanguageComboBox  Margin="0,0,8,0"/>
                    <controls:DarkModeToggleButton x:Name="darkModeButton"/>
                    <Button Margin="8,0,16,0" Click="Button_Exit_Click"
                        Content="{materialDesign:PackIcon Kind=ExitToApp, Size=24}"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        Style="{StaticResource MaterialDesignToolButton}"
                        ToolTip="{DynamicResource m_ExitPopUp}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border Background="{DynamicResource MaterialDesignCardBackground}"/>
                <ListBox VerticalAlignment="Top" x:Name="NagivationBar"
                     SelectedIndex="2" Grid.RowSpan="2"
                     ItemsSource="{Binding MenuItems}"
                     SelectedValue="{Binding SelectedItem}"
                     Margin="0,8,0,0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesign3.NavigationRailListBoxItem}">
                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            <Setter Property="materialDesign:BadgedAssist.Badge" Value="{Binding Notifications}" />
                            <Setter Property="Width" Value="92px"/>
                            <Setter Property="materialDesign:BadgedAssist.BadgeBackground" Value="#930006" />
                            <Setter Property="materialDesign:BadgedAssist.BadgeForeground" Value="#FFDAD4" />
                            <Setter Property="materialDesign:NavigationRailAssist.IsTextVisible" Value="True" />
                            <Setter Property="materialDesign:NavigationRailAssist.SelectedIcon" Value="{Binding SelectedIcon}" />
                            <Setter Property="materialDesign:NavigationRailAssist.UnselectedIcon" Value="{Binding UnselectedIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type domain:MainMenuItem}">
                            <TextBlock x:Name="textBlock" Text="{Binding Name}" TextAlignment="Center" TextWrapping="Wrap"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
                <UserControl DataContext="{Binding SelectedItem}" Grid.Column="1" Content="{Binding Content}"/>
                <materialDesign:Snackbar x:Name="mainSnackbar" Grid.Column="1" MessageQueue="{materialDesign:MessageQueue}"/>
            </Grid>
        </Grid>
        
        <materialDesign:DialogHost.DialogContent>
            <Grid Margin="16" Width="600" MaxHeight="600" MinHeight="300">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="{DynamicResource m_WhatsNew}" HorizontalAlignment="Center"
                           FontWeight="SemiBold" FontSize="24"/>
                <Separator Grid.Row="1" Margin="0,8,0,8"/>
                <RichTextBox x:Name="NewsTextBox" VerticalScrollBarVisibility="Auto" Grid.Row="2" IsReadOnly="True"/>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>
    
</UserControl>
