<UserControl x:Class="MystatDesktopWpf.UserControls.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MystatDesktopWpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:MystatDesktopWpf.Domain" 
             xmlns:controls="clr-namespace:MystatDesktopWpf.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignPaper}" 
             KeyDown="UserControl_KeyDown">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Grid x:Name="TopBar" Background="{DynamicResource MaterialDesignCardBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=NagivationBar, Path=ActualWidth}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ToggleButton Margin="0,5,0,5" Style="{DynamicResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Center" Visibility="Hidden"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2">
                <Grid x:Name="updateGrid" Visibility="Collapsed">
                    <Button Height="32" Width="32" x:Name="progressUpdateButton"
                            Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            Background="Transparent" Foreground="Transparent" BorderBrush="Transparent"
                            IsHitTestVisible="False"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True">
                    </Button>
                    <Button x:Name="updateButton" Style="{StaticResource PopupToolButton}" 
                            Foreground="{DynamicResource MaterialDesignBody}"
                            Content="{materialDesign:PackIcon Kind=TrayDownload, Size=24}" 
                            ToolTip="{DynamicResource m_UpdateApp}"
                            Visibility="{Binding ElementName=updateGrid, Path=Visibility}"
                            Click="UpdateButton_Click"/>
                </Grid>
                
                <Button x:Name="refreshButton" Margin="8,0,8,0" Click="RefreshButton_Click"
                        Content="{materialDesign:PackIcon Kind=Refresh, Size=24}"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        Style="{StaticResource MaterialDesignToolButton}"
                        materialDesign:ButtonProgressAssist.Value="-1"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True"/>
                <controls:LanguageComboBox  Margin="0,0,8,0"/>
                <controls:DarkModeToggleButton x:Name="darkModeButton"/>
                <Button Margin="8,0,16,0" Click="Button_Exit_Click"
                        Content="{materialDesign:PackIcon Kind=ExitToApp, Size=24}"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        Style="{StaticResource MaterialDesignToolButton}"
                        ToolTip="{DynamicResource m_ExitPopUp}"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Background="{DynamicResource MaterialDesignCardBackground}"/>
            <ListBox VerticalAlignment="Top" x:Name="NagivationBar"
                     SelectedIndex="1"
                     ItemsSource="{Binding MenuItems}"
                     SelectedValue="{Binding SelectedItem}"
                     Margin="0,8,0,0">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesign3.NavigationRailListBoxItem}">
                        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        <Setter Property="materialDesign:BadgedAssist.Badge" Value="{Binding Notifications}" />
                        <Setter Property="Width" Value="90px"/>
                        <Setter Property="materialDesign:BadgedAssist.BadgeBackground" Value="#930006" />
                        <Setter Property="materialDesign:BadgedAssist.BadgeForeground" Value="#FFDAD4" />
                        <Setter Property="materialDesign:NavigationRailAssist.IsTextVisible" Value="True" />
                        <Setter Property="materialDesign:NavigationRailAssist.SelectedIcon" Value="{Binding SelectedIcon}" />
                        <Setter Property="materialDesign:NavigationRailAssist.UnselectedIcon" Value="{Binding UnselectedIcon}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type domain:MainMenuItem}">
                        <TextBlock x:Name="textBlock" Text="{Binding Name}" TextAlignment="Center" TextWrapping="Wrap"/>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>
            <UserControl DataContext="{Binding SelectedItem}" Grid.Column="1" Content="{Binding Content}"/>
            <materialDesign:Snackbar x:Name="mainSnackbar" Grid.Column="1" MessageQueue="{materialDesign:MessageQueue}"/>
        </Grid>
    </Grid>
</UserControl>
